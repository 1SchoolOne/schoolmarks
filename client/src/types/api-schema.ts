/**
 * This file was auto-generated by openapi-typescript. Do not make direct
 * changes to the file.
 */

export interface paths {
	'/import/users/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listUserBulkImports']
		put?: never
		post: operations['createUserBulkImport']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/import/classes/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listClassBulkImports']
		put?: never
		post: operations['createClassBulkImport']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/import/courses/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listCourseBulkImports']
		put?: never
		post: operations['createCourseBulkImport']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/import/{import_id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveImportDetail']
		put?: never
		post?: never
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/users/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listUsers']
		put?: never
		post: operations['createUser']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/users/{id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveUser']
		put: operations['updateUser']
		post?: never
		delete: operations['destroyUser']
		options?: never
		head?: never
		patch: operations['partialUpdateUser']
		trace?: never
	}
	'/classes/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listClasses']
		put?: never
		post: operations['createClass']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/classes/{id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveClass']
		put: operations['updateClass']
		post?: never
		delete: operations['destroyClass']
		options?: never
		head?: never
		patch: operations['partialUpdateClass']
		trace?: never
	}
	'/class_students/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listClassStudents']
		put?: never
		post: operations['createClassStudent']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/class_students/{id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveClassStudent']
		put: operations['updateClassStudent']
		post?: never
		delete: operations['destroyClassStudent']
		options?: never
		head?: never
		patch: operations['partialUpdateClassStudent']
		trace?: never
	}
	'/class_sessions/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listClassSessions']
		put?: never
		post: operations['createClassSession']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/class_sessions/{id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveClassSession']
		put: operations['updateClassSession']
		post?: never
		delete: operations['destroyClassSession']
		options?: never
		head?: never
		patch: operations['partialUpdateClassSession']
		trace?: never
	}
	'/courses/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listCourses']
		put?: never
		post: operations['createCourse']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/courses/{id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveCourse']
		put: operations['updateCourse']
		post?: never
		delete: operations['destroyCourse']
		options?: never
		head?: never
		patch: operations['partialUpdateCourse']
		trace?: never
	}
	'/course_enrollments/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listCourseEnrollments']
		put?: never
		post: operations['createCourseEnrollment']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/course_enrollments/{id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveCourseEnrollment']
		put: operations['updateCourseEnrollment']
		post?: never
		delete: operations['destroyCourseEnrollment']
		options?: never
		head?: never
		patch: operations['partialUpdateCourseEnrollment']
		trace?: never
	}
	'/checkin_sessions/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listCheckinSessions']
		put?: never
		post: operations['createCheckinSession']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/checkin_sessions/{id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveCheckinSession']
		put: operations['updateCheckinSession']
		post?: never
		delete: operations['destroyCheckinSession']
		options?: never
		head?: never
		patch: operations['partialUpdateCheckinSession']
		trace?: never
	}
	'/checkin_sessions/{id}/totp/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['totpCheckinSession']
		put?: never
		post?: never
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/attendance_records/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listAttendanceRecords']
		put?: never
		post: operations['createAttendanceRecord']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/attendance_records/{id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveAttendanceRecord']
		put: operations['updateAttendanceRecord']
		post?: never
		delete: operations['destroyAttendanceRecord']
		options?: never
		head?: never
		patch: operations['partialUpdateAttendanceRecord']
		trace?: never
	}
	'/attendance_details/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listAttendanceDetails']
		put?: never
		post: operations['createAttendanceDetail']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/attendance_details/{id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveAttendanceDetail']
		put: operations['updateAttendanceDetail']
		post?: never
		delete: operations['destroyAttendanceDetail']
		options?: never
		head?: never
		patch: operations['partialUpdateAttendanceDetail']
		trace?: never
	}
	'/grades/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listGrades']
		put?: never
		post: operations['createGrade']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/grades/{id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveGrade']
		put: operations['updateGrade']
		post?: never
		delete: operations['destroyGrade']
		options?: never
		head?: never
		patch: operations['partialUpdateGrade']
		trace?: never
	}
	'/student_grades/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['listStudentGrades']
		put?: never
		post: operations['createStudentGrade']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/student_grades/{id}/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get: operations['retrieveStudentGrade']
		put: operations['updateStudentGrade']
		post?: never
		delete: operations['destroyStudentGrade']
		options?: never
		head?: never
		patch: operations['partialUpdateStudentGrade']
		trace?: never
	}
	'/classes/bulk_delete/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get?: never
		put?: never
		post: operations['bulkDeleteClass']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/courses/bulk_delete/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get?: never
		put?: never
		post: operations['bulkDeleteCourse']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/course_enrollments/bulk_delete/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get?: never
		put?: never
		post: operations['bulkDeleteCourseEnrollment']
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
	'/classes/{id}/update_students/': {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		get?: never
		put: operations['updateStudentsClass']
		post?: never
		delete?: never
		options?: never
		head?: never
		patch?: never
		trace?: never
	}
}
export type webhooks = Record<string, never>
export interface components {
	schemas: {
		User: {
			readonly id?: number
			/** Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
			username: string
			first_name?: string
			last_name?: string
			/** Format: email */
			email: string
			/** Format: date */
			birthday?: string | null
			phone_number?: string | null
			has_changed_password?: boolean
			readonly role?: string
		}
		Class: {
			/** Format: uuid */
			readonly id?: string
			readonly students?: string
			name: string
			code: string
			year_of_graduation?: number | null
			/** Format: date-time */
			readonly created_at?: string
			/** Format: date-time */
			readonly updated_at?: string
		}
		ClassStudent: {
			/** Format: uuid */
			readonly id?: string
			class_group: string
			student: number
		}
		ClassSessionDetail: {
			/** Format: uuid */
			readonly id?: string
			readonly course?: {
				/** Format: uuid */
				readonly id?: string
				name: string
				code: string
				readonly professor?: {
					readonly id?: number
					/**
					 * Required. 150 characters or fewer. Letters, digits and
					 *
					 * @/./+/-/_ only.
					 */
					username: string
					first_name?: string
					last_name?: string
					/** Format: email */
					email: string
					/** Format: date */
					birthday?: string | null
					phone_number?: string | null
					has_changed_password?: boolean
					readonly role?: string
				}
				professor_id?: number | null
				/** Format: date-time */
				readonly created_at?: string
				/** Format: date-time */
				readonly updated_at?: string
			}
			/** Format: date */
			date: string
			start_time: string
			end_time: string
			room: string
			status: string
			readonly checkin_session?: string
		}
		Course: {
			/** Format: uuid */
			readonly id?: string
			name: string
			code: string
			readonly professor?: {
				readonly id?: number
				/**
				 * Required. 150 characters or fewer. Letters, digits and
				 *
				 * @/./+/-/_ only.
				 */
				username: string
				first_name?: string
				last_name?: string
				/** Format: email */
				email: string
				/** Format: date */
				birthday?: string | null
				phone_number?: string | null
				has_changed_password?: boolean
				readonly role?: string
			}
			professor_id?: number | null
			/** Format: date-time */
			readonly created_at?: string
			/** Format: date-time */
			readonly updated_at?: string
		}
		CourseEnrollment: {
			/** Format: uuid */
			readonly id?: string
			/** Format: uuid */
			course_id: string
			/** Format: uuid */
			class_group_id: string
			readonly course?: {
				/** Format: uuid */
				readonly id?: string
				name: string
				code: string
				readonly professor?: {
					readonly id?: number
					/**
					 * Required. 150 characters or fewer. Letters, digits and
					 *
					 * @/./+/-/_ only.
					 */
					username: string
					first_name?: string
					last_name?: string
					/** Format: email */
					email: string
					/** Format: date */
					birthday?: string | null
					phone_number?: string | null
					has_changed_password?: boolean
					readonly role?: string
				}
				professor_id?: number | null
				/** Format: date-time */
				readonly created_at?: string
				/** Format: date-time */
				readonly updated_at?: string
			}
			readonly class_group?: {
				/** Format: uuid */
				readonly id?: string
				readonly students?: string
				name: string
				code: string
				year_of_graduation?: number | null
				/** Format: date-time */
				readonly created_at?: string
				/** Format: date-time */
				readonly updated_at?: string
			}
			/** Format: date-time */
			readonly enrolled_at?: string
		}
		CheckinSession: {
			/** Format: uuid */
			readonly id?: string
			class_session: string
			/** Format: date-time */
			started_at: string
			/** Format: date-time */
			closed_at: string
			created_by: number
			status: string
			secret?: string | null
		}
		AttendanceRecord: {
			/** Format: uuid */
			readonly id?: string
			checkin_session: string
			student: number
			readonly student_detail?: {
				readonly id?: number
				/**
				 * Required. 150 characters or fewer. Letters, digits and
				 *
				 * @/./+/-/_ only.
				 */
				username: string
				first_name?: string
				last_name?: string
				/** Format: email */
				email: string
				/** Format: date */
				birthday?: string | null
				phone_number?: string | null
				has_changed_password?: boolean
				readonly role?: string
			}
			/** Format: date-time */
			checked_in_at: string
			status: string
		}
		AttendanceDetail: {
			/** Format: uuid */
			readonly id?: string
			attendance_record: string
			student: number
			class_session: string
			course: string
			status: string
			/** Format: date-time */
			checked_in_at: string
			minutes_late: number
			/** Format: date-time */
			readonly created_at?: string
		}
		Grade: {
			/** Format: uuid */
			readonly id?: string
			course: string
			name: string
			/** Format: decimal */
			max_value: string
			/**
			 * Format: decimal
			 *
			 * Pourcentage de la note finale
			 */
			coef: string
			description?: string | null
			readonly class_group?: {
				/** Format: uuid */
				readonly id?: string
				readonly students?: string
				name: string
				code: string
				year_of_graduation?: number | null
				/** Format: date-time */
				readonly created_at?: string
				/** Format: date-time */
				readonly updated_at?: string
			}
			readonly student_grades?: {
				/** Format: uuid */
				readonly id?: string
				grade: string
				student: number
				/** Format: decimal */
				value: string
				comment?: string | null
				/** Format: date-time */
				readonly created_at?: string
				/** Format: date-time */
				readonly updated_at?: string
			}[]
			/** Format: date-time */
			readonly created_at?: string
			/** Format: date-time */
			readonly updated_at?: string
		}
		StudentGrade: {
			/** Format: uuid */
			readonly id?: string
			grade: string
			student: number
			/** Format: decimal */
			value: string
			comment?: string | null
			/** Format: date-time */
			readonly created_at?: string
			/** Format: date-time */
			readonly updated_at?: string
		}
		ClassSession: {
			/** Format: uuid */
			readonly id?: string
			course: string
			/** Format: date */
			date: string
			start_time: string
			end_time: string
			room: string
			status: string
		}
	}
	responses: never
	parameters: never
	requestBodies: never
	headers: never
	pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
	listUserBulkImports: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': unknown[]
				}
			}
		}
	}
	createUserBulkImport: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': unknown
				'application/x-www-form-urlencoded': unknown
				'multipart/form-data': unknown
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': unknown
				}
			}
		}
	}
	listClassBulkImports: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': unknown[]
				}
			}
		}
	}
	createClassBulkImport: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': unknown
				'application/x-www-form-urlencoded': unknown
				'multipart/form-data': unknown
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': unknown
				}
			}
		}
	}
	listCourseBulkImports: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': unknown[]
				}
			}
		}
	}
	createCourseBulkImport: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': unknown
				'application/x-www-form-urlencoded': unknown
				'multipart/form-data': unknown
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': unknown
				}
			}
		}
	}
	retrieveImportDetail: {
		parameters: {
			query?: never
			header?: never
			path: {
				import_id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': unknown
				}
			}
		}
	}
	listUsers: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['User'][]
				}
			}
		}
	}
	createUser: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['User']
				'application/x-www-form-urlencoded': components['schemas']['User']
				'multipart/form-data': components['schemas']['User']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['User']
				}
			}
		}
	}
	retrieveUser: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A unique integer value identifying this user. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['User']
				}
			}
		}
	}
	updateUser: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A unique integer value identifying this user. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['User']
				'application/x-www-form-urlencoded': components['schemas']['User']
				'multipart/form-data': components['schemas']['User']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['User']
				}
			}
		}
	}
	destroyUser: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A unique integer value identifying this user. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			204: {
				headers: {
					[name: string]: unknown
				}
				content?: never
			}
		}
	}
	partialUpdateUser: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A unique integer value identifying this user. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['User']
				'application/x-www-form-urlencoded': components['schemas']['User']
				'multipart/form-data': components['schemas']['User']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['User']
				}
			}
		}
	}
	listClasses: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Class'][]
				}
			}
		}
	}
	createClass: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Class']
				'application/x-www-form-urlencoded': components['schemas']['Class']
				'multipart/form-data': components['schemas']['Class']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Class']
				}
			}
		}
	}
	retrieveClass: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Class']
				}
			}
		}
	}
	updateClass: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Class']
				'application/x-www-form-urlencoded': components['schemas']['Class']
				'multipart/form-data': components['schemas']['Class']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Class']
				}
			}
		}
	}
	destroyClass: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			204: {
				headers: {
					[name: string]: unknown
				}
				content?: never
			}
		}
	}
	partialUpdateClass: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Class']
				'application/x-www-form-urlencoded': components['schemas']['Class']
				'multipart/form-data': components['schemas']['Class']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Class']
				}
			}
		}
	}
	listClassStudents: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['ClassStudent'][]
				}
			}
		}
	}
	createClassStudent: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['ClassStudent']
				'application/x-www-form-urlencoded': components['schemas']['ClassStudent']
				'multipart/form-data': components['schemas']['ClassStudent']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['ClassStudent']
				}
			}
		}
	}
	retrieveClassStudent: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class student. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['ClassStudent']
				}
			}
		}
	}
	updateClassStudent: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class student. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['ClassStudent']
				'application/x-www-form-urlencoded': components['schemas']['ClassStudent']
				'multipart/form-data': components['schemas']['ClassStudent']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['ClassStudent']
				}
			}
		}
	}
	destroyClassStudent: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class student. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			204: {
				headers: {
					[name: string]: unknown
				}
				content?: never
			}
		}
	}
	partialUpdateClassStudent: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class student. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['ClassStudent']
				'application/x-www-form-urlencoded': components['schemas']['ClassStudent']
				'multipart/form-data': components['schemas']['ClassStudent']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['ClassStudent']
				}
			}
		}
	}
	listClassSessions: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['ClassSessionDetail'][]
				}
			}
		}
	}
	createClassSession: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['ClassSession']
				'application/x-www-form-urlencoded': components['schemas']['ClassSession']
				'multipart/form-data': components['schemas']['ClassSession']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['ClassSession']
				}
			}
		}
	}
	retrieveClassSession: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class session. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['ClassSessionDetail']
				}
			}
		}
	}
	updateClassSession: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class session. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['ClassSession']
				'application/x-www-form-urlencoded': components['schemas']['ClassSession']
				'multipart/form-data': components['schemas']['ClassSession']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['ClassSession']
				}
			}
		}
	}
	destroyClassSession: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class session. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			204: {
				headers: {
					[name: string]: unknown
				}
				content?: never
			}
		}
	}
	partialUpdateClassSession: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class session. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['ClassSessionDetail']
				'application/x-www-form-urlencoded': components['schemas']['ClassSessionDetail']
				'multipart/form-data': components['schemas']['ClassSessionDetail']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['ClassSessionDetail']
				}
			}
		}
	}
	listCourses: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Course'][]
				}
			}
		}
	}
	createCourse: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Course']
				'application/x-www-form-urlencoded': components['schemas']['Course']
				'multipart/form-data': components['schemas']['Course']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Course']
				}
			}
		}
	}
	retrieveCourse: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this course. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Course']
				}
			}
		}
	}
	updateCourse: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this course. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Course']
				'application/x-www-form-urlencoded': components['schemas']['Course']
				'multipart/form-data': components['schemas']['Course']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Course']
				}
			}
		}
	}
	destroyCourse: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this course. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			204: {
				headers: {
					[name: string]: unknown
				}
				content?: never
			}
		}
	}
	partialUpdateCourse: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this course. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Course']
				'application/x-www-form-urlencoded': components['schemas']['Course']
				'multipart/form-data': components['schemas']['Course']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Course']
				}
			}
		}
	}
	listCourseEnrollments: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CourseEnrollment'][]
				}
			}
		}
	}
	createCourseEnrollment: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['CourseEnrollment']
				'application/x-www-form-urlencoded': components['schemas']['CourseEnrollment']
				'multipart/form-data': components['schemas']['CourseEnrollment']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CourseEnrollment']
				}
			}
		}
	}
	retrieveCourseEnrollment: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this course enrollment. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CourseEnrollment']
				}
			}
		}
	}
	updateCourseEnrollment: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this course enrollment. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['CourseEnrollment']
				'application/x-www-form-urlencoded': components['schemas']['CourseEnrollment']
				'multipart/form-data': components['schemas']['CourseEnrollment']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CourseEnrollment']
				}
			}
		}
	}
	destroyCourseEnrollment: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this course enrollment. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			204: {
				headers: {
					[name: string]: unknown
				}
				content?: never
			}
		}
	}
	partialUpdateCourseEnrollment: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this course enrollment. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['CourseEnrollment']
				'application/x-www-form-urlencoded': components['schemas']['CourseEnrollment']
				'multipart/form-data': components['schemas']['CourseEnrollment']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CourseEnrollment']
				}
			}
		}
	}
	listCheckinSessions: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CheckinSession'][]
				}
			}
		}
	}
	createCheckinSession: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['CheckinSession']
				'application/x-www-form-urlencoded': components['schemas']['CheckinSession']
				'multipart/form-data': components['schemas']['CheckinSession']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CheckinSession']
				}
			}
		}
	}
	retrieveCheckinSession: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this checkin session. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CheckinSession']
				}
			}
		}
	}
	updateCheckinSession: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this checkin session. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['CheckinSession']
				'application/x-www-form-urlencoded': components['schemas']['CheckinSession']
				'multipart/form-data': components['schemas']['CheckinSession']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CheckinSession']
				}
			}
		}
	}
	destroyCheckinSession: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this checkin session. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			204: {
				headers: {
					[name: string]: unknown
				}
				content?: never
			}
		}
	}
	partialUpdateCheckinSession: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this checkin session. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['CheckinSession']
				'application/x-www-form-urlencoded': components['schemas']['CheckinSession']
				'multipart/form-data': components['schemas']['CheckinSession']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CheckinSession']
				}
			}
		}
	}
	totpCheckinSession: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this checkin session. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CheckinSession']
				}
			}
		}
	}
	listAttendanceRecords: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['AttendanceRecord'][]
				}
			}
		}
	}
	createAttendanceRecord: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['AttendanceRecord']
				'application/x-www-form-urlencoded': components['schemas']['AttendanceRecord']
				'multipart/form-data': components['schemas']['AttendanceRecord']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['AttendanceRecord']
				}
			}
		}
	}
	retrieveAttendanceRecord: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this attendance record. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['AttendanceRecord']
				}
			}
		}
	}
	updateAttendanceRecord: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this attendance record. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['AttendanceRecord']
				'application/x-www-form-urlencoded': components['schemas']['AttendanceRecord']
				'multipart/form-data': components['schemas']['AttendanceRecord']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['AttendanceRecord']
				}
			}
		}
	}
	destroyAttendanceRecord: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this attendance record. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			204: {
				headers: {
					[name: string]: unknown
				}
				content?: never
			}
		}
	}
	partialUpdateAttendanceRecord: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this attendance record. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['AttendanceRecord']
				'application/x-www-form-urlencoded': components['schemas']['AttendanceRecord']
				'multipart/form-data': components['schemas']['AttendanceRecord']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['AttendanceRecord']
				}
			}
		}
	}
	listAttendanceDetails: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['AttendanceDetail'][]
				}
			}
		}
	}
	createAttendanceDetail: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['AttendanceDetail']
				'application/x-www-form-urlencoded': components['schemas']['AttendanceDetail']
				'multipart/form-data': components['schemas']['AttendanceDetail']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['AttendanceDetail']
				}
			}
		}
	}
	retrieveAttendanceDetail: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this attendance detail. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['AttendanceDetail']
				}
			}
		}
	}
	updateAttendanceDetail: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this attendance detail. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['AttendanceDetail']
				'application/x-www-form-urlencoded': components['schemas']['AttendanceDetail']
				'multipart/form-data': components['schemas']['AttendanceDetail']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['AttendanceDetail']
				}
			}
		}
	}
	destroyAttendanceDetail: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this attendance detail. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			204: {
				headers: {
					[name: string]: unknown
				}
				content?: never
			}
		}
	}
	partialUpdateAttendanceDetail: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this attendance detail. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['AttendanceDetail']
				'application/x-www-form-urlencoded': components['schemas']['AttendanceDetail']
				'multipart/form-data': components['schemas']['AttendanceDetail']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['AttendanceDetail']
				}
			}
		}
	}
	listGrades: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Grade'][]
				}
			}
		}
	}
	createGrade: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Grade']
				'application/x-www-form-urlencoded': components['schemas']['Grade']
				'multipart/form-data': components['schemas']['Grade']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Grade']
				}
			}
		}
	}
	retrieveGrade: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this grade. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Grade']
				}
			}
		}
	}
	updateGrade: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this grade. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Grade']
				'application/x-www-form-urlencoded': components['schemas']['Grade']
				'multipart/form-data': components['schemas']['Grade']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Grade']
				}
			}
		}
	}
	destroyGrade: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this grade. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			204: {
				headers: {
					[name: string]: unknown
				}
				content?: never
			}
		}
	}
	partialUpdateGrade: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this grade. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Grade']
				'application/x-www-form-urlencoded': components['schemas']['Grade']
				'multipart/form-data': components['schemas']['Grade']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Grade']
				}
			}
		}
	}
	listStudentGrades: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['StudentGrade'][]
				}
			}
		}
	}
	createStudentGrade: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['StudentGrade']
				'application/x-www-form-urlencoded': components['schemas']['StudentGrade']
				'multipart/form-data': components['schemas']['StudentGrade']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['StudentGrade']
				}
			}
		}
	}
	retrieveStudentGrade: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this student grade. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['StudentGrade']
				}
			}
		}
	}
	updateStudentGrade: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this student grade. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['StudentGrade']
				'application/x-www-form-urlencoded': components['schemas']['StudentGrade']
				'multipart/form-data': components['schemas']['StudentGrade']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['StudentGrade']
				}
			}
		}
	}
	destroyStudentGrade: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this student grade. */
				id: string
			}
			cookie?: never
		}
		requestBody?: never
		responses: {
			204: {
				headers: {
					[name: string]: unknown
				}
				content?: never
			}
		}
	}
	partialUpdateStudentGrade: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this student grade. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['StudentGrade']
				'application/x-www-form-urlencoded': components['schemas']['StudentGrade']
				'multipart/form-data': components['schemas']['StudentGrade']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['StudentGrade']
				}
			}
		}
	}
	bulkDeleteClass: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Class']
				'application/x-www-form-urlencoded': components['schemas']['Class']
				'multipart/form-data': components['schemas']['Class']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Class']
				}
			}
		}
	}
	bulkDeleteCourse: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Course']
				'application/x-www-form-urlencoded': components['schemas']['Course']
				'multipart/form-data': components['schemas']['Course']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Course']
				}
			}
		}
	}
	bulkDeleteCourseEnrollment: {
		parameters: {
			query?: never
			header?: never
			path?: never
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['CourseEnrollment']
				'application/x-www-form-urlencoded': components['schemas']['CourseEnrollment']
				'multipart/form-data': components['schemas']['CourseEnrollment']
			}
		}
		responses: {
			201: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['CourseEnrollment']
				}
			}
		}
	}
	updateStudentsClass: {
		parameters: {
			query?: never
			header?: never
			path: {
				/** A UUID string identifying this class. */
				id: string
			}
			cookie?: never
		}
		requestBody?: {
			content: {
				'application/json': components['schemas']['Class']
				'application/x-www-form-urlencoded': components['schemas']['Class']
				'multipart/form-data': components['schemas']['Class']
			}
		}
		responses: {
			200: {
				headers: {
					[name: string]: unknown
				}
				content: {
					'application/json': components['schemas']['Class']
				}
			}
		}
	}
}
